{
	"info": {
		"_postman_id": "723bf029-4baf-40d5-ade8-9ab941a67a98",
		"name": "Reqres",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "33378250"
	},
	"item": [
		{
			"name": "LIST USERS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"    });\r",
							"pm.test(\"Check list users are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(2);\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    pm.expect(jsonData.data[0].id).to.eql(7); \r",
							"    pm.expect(jsonData.data[0].email).to.eql(\"michael.lawson@reqres.in\"); \r",
							"    pm.expect(jsonData.data[1].id).to.eql(8); \r",
							"    pm.expect(jsonData.data[1].first_name).to.eql(\"Lindsay\"); \r",
							"    pm.expect(jsonData.data[2].id).to.eql(9);\r",
							"    pm.expect(jsonData.data[2].last_name).to.eql(\"Funke\");  \r",
							"    pm.expect(jsonData.data[3].id).to.eql(10);\r",
							"    pm.expect(jsonData.data[3].avatar).to.eql(\"https://reqres.in/img/faces/10-image.jpg\");\r",
							"});\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"https://reqres.in/img/faces/12-image.jpg\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base-URL}}api/users?page=2",
					"host": [
						"{{Base-URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "page",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Check single user is correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.data.id).to.eql(2);\r",
							"    pm.expect(jsonData.data.email).to.eql(\"janet.weaver@reqres.in\");\r",
							"    pm.expect(jsonData.data.first_name).to.eql(\"Janet\");\r",
							"    pm.expect(jsonData.data.last_name).to.eql(\"Weaver\");\r",
							"    pm.expect(jsonData.data.avatar).to.eql(\"https://reqres.in/img/faces/2-image.jpg\");\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base-URL}}api/users/2",
					"host": [
						"{{Base-URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE USER NOT FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Status code is Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base-URL}}api/users/23",
					"host": [
						"{{Base-URL}}api"
					],
					"path": [
						"users",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "LIST <RESOURCE>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"    });\r",
							"pm.test(\"Check list<resourse> users are correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(1);\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.data[0].id).to.eql(1);\r",
							"    pm.expect(jsonData.data[0].name).to.eql(\"cerulean\");\r",
							"    pm.expect(jsonData.data[0].year).to.eql(2000);\r",
							"    pm.expect(jsonData.data[0].color).to.eql(\"#98B2D1\");\r",
							"    pm.expect(jsonData.data[0].pantone_value).to.eql(\"15-4020\");\r",
							"    pm.expect(jsonData.data[1].id).to.eql(2);\r",
							"    pm.expect(jsonData.data[1].name).to.eql(\"fuchsia rose\");\r",
							"    pm.expect(jsonData.data[1].year).to.eql(2001);\r",
							"    pm.expect(jsonData.data[1].color).to.eql(\"#C74375\");\r",
							"    pm.expect(jsonData.data[1].pantone_value).to.eql(\"17-2031\");\r",
							"    pm.expect(jsonData.data[2].id).to.eql(3);\r",
							"    pm.expect(jsonData.data[2].name).to.eql(\"true red\");\r",
							"    pm.expect(jsonData.data[2].year).to.eql(2002);\r",
							"    pm.expect(jsonData.data[2].color).to.eql(\"#BF1932\");\r",
							"    pm.expect(jsonData.data[2].pantone_value).to.eql(\"19-1664\");\r",
							"    pm.expect(jsonData.data[3].id).to.eql(4);\r",
							"    pm.expect(jsonData.data[3].name).to.eql(\"aqua sky\");\r",
							"    pm.expect(jsonData.data[3].year).to.eql(2003);\r",
							"    pm.expect(jsonData.data[3].color).to.eql(\"#7BC4C4\");\r",
							"    pm.expect(jsonData.data[3].pantone_value).to.eql(\"14-4811\");\r",
							"    pm.expect(jsonData.data[4].id).to.eql(5);\r",
							"    pm.expect(jsonData.data[4].name).to.eql(\"tigerlily\");\r",
							"    pm.expect(jsonData.data[4].year).to.eql(2004);\r",
							"    pm.expect(jsonData.data[4].color).to.eql(\"#E2583E\");\r",
							"    pm.expect(jsonData.data[4].pantone_value).to.eql(\"17-1456\");\r",
							"    pm.expect(jsonData.data[5].id).to.eql(6);\r",
							"    pm.expect(jsonData.data[5].name).to.eql(\"blue turquoise\");\r",
							"    pm.expect(jsonData.data[5].year).to.eql(2005);\r",
							"    pm.expect(jsonData.data[5].color).to.eql(\"#53B0AE\");\r",
							"    pm.expect(jsonData.data[5].pantone_value).to.eql(\"15-5217\");\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"  \r",
							"\r",
							"    });"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown"
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE <RESOURCE>",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"\r",
							"    pm.test(\"Check SINGLE <RESOURCE> is correct\", function () {\r",
							"        var jsonData = pm.response.json();\r",
							"        pm.expect(jsonData.data.id).to.eql(2);\r",
							"        pm.expect(jsonData.data.name).to.eql(\"fuchsia rose\");\r",
							"        pm.expect(jsonData.data.year).to.eql(2001);\r",
							"        pm.expect(jsonData.data.color).to.eql(\"#C74375\");\r",
							"        pm.expect(jsonData.data.pantone_value).to.eql(\"17-2031\");\r",
							"        pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"        pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"    });\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "SINGLE <RESOURCE> NOT FOUND",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is Not Found\", function () {\r",
							"    pm.response.to.have.status(404);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/unknown/23",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"unknown",
						"23"
					]
				}
			},
			"response": []
		},
		{
			"name": "CREATE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" pm.test(\"Successful POST request\", function () {\r",
							"        pm.expect(pm.response.code).to.be.oneOf([201, 202]);\r",
							"    });\r",
							"\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check Create users\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"morpheus\");\r",
							"    pm.expect(jsonData.job).to.eql(\"leader\");\r",
							"    //pm.expect(jsonData.id).to.eql(68);\r",
							"   // pm.expect(jsonData.createdAt).to.eql(\"2024-03-15T23:17:22.979Z\");\r",
							"\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"morpheus\",\r\n    \"job\": \"leader\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE USER",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check Update User is Correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Waleed\");\r",
							"    pm.expect(jsonData.job).to.eql(\"Software Test Engineer\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Waleed\",\r\n    \"job\": \"Software Test Engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "UPDATE USER DATA",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check Update User Data is Correct\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.name).to.eql(\"Hazem\");\r",
							"    pm.expect(jsonData.job).to.eql(\"Engineer\");\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Hazem\",\r\n    \"job\": \"Engineer\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/users/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE User",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"    pm.response.to.have.status(204);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users/2",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER - SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check that user register is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.id).to.eql(4);\r",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"pistol\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/register",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "REGISTER - UNSUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check that user register is unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"sydney@fife\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/register",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN - SUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check that user login is successful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.token).to.eql(\"QpwL5tke4Pnpja7X4\")\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "QpwL5tke4Pnpja7X4",
							"type": "string"
						}
					]
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"email\": \"eve.holt@reqres.in\",\r\n    \"password\": \"cityslicka\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/login",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "LOGIN - UNSUCCESSFUL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {\r",
							"    pm.response.to.have.status(400);\r",
							"});\r",
							"pm.test(\"Response time is less than 3000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(3000);\r",
							"});\r",
							"pm.test(\"Check that user login is unsuccessful\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.error).to.eql(\"Missing password\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n     \"email\" : \"peter@klaven\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{Base_URL}}api/login",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELAYED RESPONSE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Response time is less than 10000ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(10000);\r",
							"});\r",
							"pm.test(\"Check Delay Response\", function () {\r",
							"    var jsonData = pm.response.json();\r",
							"    pm.expect(jsonData.page).to.eql(1);\r",
							"    pm.expect(jsonData.per_page).to.eql(6);\r",
							"    pm.expect(jsonData.total).to.eql(12);\r",
							"    pm.expect(jsonData.total_pages).to.eql(2);\r",
							"    pm.expect(jsonData.data[0].id).to.eql(1); \r",
							"    pm.expect(jsonData.data[0].email).to.eql(\"george.bluth@reqres.in\");\r",
							"    pm.expect(jsonData.data[0].first_name).to.eql(\"George\");\r",
							"    pm.expect(jsonData.data[0].last_name).to.eql(\"Bluth\");\r",
							"    pm.expect(jsonData.data[0].avatar).to.eql(\"https://reqres.in/img/faces/1-image.jpg\");\r",
							"    pm.expect(jsonData.data[1].id).to.eql(2);\r",
							"    pm.expect(jsonData.data[1].email).to.eql(\"janet.weaver@reqres.in\");\r",
							"    pm.expect(jsonData.data[1].first_name).to.eql(\"Janet\");\r",
							"    pm.expect(jsonData.data[1].last_name).to.eql(\"Weaver\");\r",
							"    pm.expect(jsonData.data[1].avatar).to.eql(\"https://reqres.in/img/faces/2-image.jpg\");\r",
							"    pm.expect(jsonData.data[2].id).to.eql(3);\r",
							"    pm.expect(jsonData.data[2].email).to.eql(\"emma.wong@reqres.in\");\r",
							"    pm.expect(jsonData.data[2].first_name).to.eql(\"Emma\");\r",
							"    pm.expect(jsonData.data[2].last_name).to.eql(\"Wong\");\r",
							"    pm.expect(jsonData.data[2].avatar).to.eql(\"https://reqres.in/img/faces/3-image.jpg\");\r",
							"    pm.expect(jsonData.data[3].id).to.eql(4);\r",
							"    pm.expect(jsonData.data[3].email).to.eql(\"eve.holt@reqres.in\");\r",
							"    pm.expect(jsonData.data[3].first_name).to.eql(\"Eve\");\r",
							"    pm.expect(jsonData.data[3].last_name).to.eql(\"Holt\");\r",
							"    pm.expect(jsonData.data[3].avatar).to.eql(\"https://reqres.in/img/faces/4-image.jpg\");\r",
							"    pm.expect(jsonData.data[4].id).to.eql(5);\r",
							"    pm.expect(jsonData.data[4].email).to.eql(\"charles.morris@reqres.in\");\r",
							"    pm.expect(jsonData.data[4].first_name).to.eql(\"Charles\");\r",
							"    pm.expect(jsonData.data[4].last_name).to.eql(\"Morris\");\r",
							"    pm.expect(jsonData.data[4].avatar).to.eql(\"https://reqres.in/img/faces/5-image.jpg\");\r",
							"    pm.expect(jsonData.data[5].id).to.eql(6);\r",
							"    pm.expect(jsonData.data[5].email).to.eql(\"tracey.ramos@reqres.in\");\r",
							"    pm.expect(jsonData.data[5].first_name).to.eql(\"Tracey\");\r",
							"    pm.expect(jsonData.data[5].last_name).to.eql(\"Ramos\");\r",
							"    pm.expect(jsonData.data[5].avatar).to.eql(\"https://reqres.in/img/faces/6-image.jpg\");\r",
							"    pm.expect(jsonData.support.url).to.eql(\"https://reqres.in/#support-heading\");\r",
							"    pm.expect(jsonData.support.text).to.eql(\"To keep ReqRes free, contributions towards server costs are appreciated!\");\r",
							"\r",
							"\r",
							"\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{Base_URL}}api/users?delay=3",
					"host": [
						"{{Base_URL}}api"
					],
					"path": [
						"users"
					],
					"query": [
						{
							"key": "delay",
							"value": "3"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Base-URL",
			"value": "https://reqres.in/",
			"type": "string"
		}
	]
}